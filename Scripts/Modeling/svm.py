# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pAIGTsKrAS2yWjkMmjJ6ZNEHD1Xqzh1V
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

import warnings

warnings.filterwarnings('ignore')

test = pd.read_csv("TestSet.csv")
train = pd.read_csv("TrainSet.csv")

test_names=test["Name"]
train_names=train["Name"]

test=test.drop(["Name","Year","Pos","GP"],axis=1)
train=train.drop(["Name","Year","Pos","GP"],axis=1)

train_X = train.drop(['Suc'], axis=1)
train_Y = train['Suc']
test_X = test.drop(["Suc"],axis=1)
test_Y = test["Suc"]

from sklearn.svm import SVC
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
train_X_scaled = scaler.fit_transform(train_X)
test_X_scaled = scaler.transform(test_X)

svm_model = SVC(kernel='rbf', random_state=0)

svm_model.fit(train_X_scaled, train_Y)

y_pred_test = svm_model.predict(test_X_scaled)

from sklearn.metrics import accuracy_score

print('Model accuracy score: {0:0.4f}'. format(accuracy_score(test_Y, y_pred_test)))

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(test_Y, y_pred_test)

print('Confusion matrix\n\n', cm)

print('\nTrue Positives(TP) = ', cm[0,0])

print('\nTrue Negatives(TN) = ', cm[1,1])

print('\nFalse Positives(FP) = ', cm[0,1])

print('\nFalse Negatives(FN) = ', cm[1,0])